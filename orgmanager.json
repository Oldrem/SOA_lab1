{
  "openapi": "3.0.3",
  "info": {
    "title": "Service â„–2",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "se.ifmo.ru/~264477/orgmanager"
    }
  ],
  "tags": [
    {
      "name": "Organization"
    }
  ],
  "paths": {
    "/merge/{id1}/{id2}/{new-name}/{new-address}": {
      "post": {
        "tags": [
          "Organization"
        ],
        "summary": "Merge two organizations",
        "description": "Merges two organizations, creating a new one with employees from both orgs.",
        "operationId": "mergeOrganizations",
        "parameters": [
          {
            "name": "id1",
            "in": "path",
            "description": "ID of first organization",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "id2",
            "in": "path",
            "description": "ID of second organization",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "new-name",
            "in": "path",
            "description": "Name of new organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "new-address",
            "in": "path",
            "description": "Address of new organization",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Address"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Organization not found"
          }
		  "405": {
			"description": "Validation exception"
        }
      }
    },
    "/aquire/{aquirer-id}/{aquired-id}": {
      "post": {
        "tags": [
          "Organization"
        ],
        "summary": "Make one organization aquire another",
        "description": "Make one organization aquire another without firing employees",
        "operationId": "aquireOrganization",
        "parameters": [
          {
            "name": "aquirer-id",
            "in": "path",
            "description": "ID of first organization",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "aquired-id",
            "in": "path",
            "description": "ID of second organization",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Organization not found"
          }
		  "405": {
			"description": "Validation exception"
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Coordinates": {
        "type": "object",
        "properties": {
          "x": {
            "type": "number",
            "format": "float",
            "maximum": 91
          },
          "y": {
            "type": "integer",
            "format": "int64"
          }
        },
        "xml": {
          "name": "coordinates"
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string"
          },
          "zipCode": {
            "type": "string",
            "maxLength": 28
          }
        },
        "xml": {
          "name": "address"
        }
      },
      "OrganizationType": {
        "type": "string",
        "description": "organization type",
        "nullable": true,
        "enum": [
          "commercial",
          "government",
          "open_joint_stock_company"
        ]
      },
      "Organization": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Unique field, generated automatically",
            "example": 1
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "example": "ItmoUniversity"
          },
          "coordinates": {
            "$ref": "#/components/schemas/Coordinates"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time",
            "description": "Generated automatically",
            "example": "2020-05-15T06:45:30.000Z"
          },
          "annualTurnover": {
            "type": "integer",
            "format": "long",
            "minimum": 0,
            "example": 12345678
          },
          "fullName": {
            "type": "string",
            "description": "Unique field",
            "example": "Itmo University Full Name"
          },
          "employeesCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "minimum": 0,
            "example": 1
          },
          "organizationType": {
            "$ref": "#/components/schemas/OrganizationType"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          }
        },
        "xml": {
          "name": "organization"
        }
      }
    },
    "requestBodies": {
      "Organization": {
        "description": "Organization object that needs to be added",
        "content": {
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/Organization"
            }
          }
        }
      }
    }
  }
}